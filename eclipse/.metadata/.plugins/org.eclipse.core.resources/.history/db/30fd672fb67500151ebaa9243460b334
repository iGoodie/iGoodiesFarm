/*
 * Decompiled with CFR 0_102.
 * 
 * Could not load the following classes:
 *  net.minecraft.block.Block
 *  net.minecraft.init.Items
 *  net.minecraft.inventory.InventoryCrafting
 *  net.minecraft.item.Item
 *  net.minecraft.item.ItemStack
 *  net.minecraft.item.crafting.IRecipe
 *  net.minecraft.item.crafting.ShapedRecipes
 *  net.minecraft.item.crafting.ShapelessRecipes
 *  net.minecraft.world.World
 *  net.minecraftforge.oredict.ShapelessOreRecipe
 */
package com.pam.harvestcraft;

import com.pam.harvestcraft.ItemRegistry;
import com.pam.harvestcraft.RecipeSorterPamCuttingBoard;
import java.util.ArrayList;
import java.util.Collections;
import java.util.HashMap;
import java.util.List;
import net.minecraft.block.Block;
import net.minecraft.init.Items;
import net.minecraft.inventory.InventoryCrafting;
import net.minecraft.item.Item;
import net.minecraft.item.ItemStack;
import net.minecraft.item.crafting.IRecipe;
import net.minecraft.item.crafting.ShapedRecipes;
import net.minecraft.item.crafting.ShapelessRecipes;
import net.minecraft.world.World;
import net.minecraftforge.oredict.ShapelessOreRecipe;

public class CraftingManagerPamCuttingBoard {
    private static final CraftingManagerPamCuttingBoard instance = new CraftingManagerPamCuttingBoard();
    private List recipes = new ArrayList();

    public static final CraftingManagerPamCuttingBoard getInstance() {
        return instance;
    }

    private CraftingManagerPamCuttingBoard() {
        this.recipes.add(new ShapelessOreRecipe(ItemRegistry.potatosaladItem, new Object[]{Items.field_151168_bH, "foodMayo"}));
        this.recipes.add(new ShapelessOreRecipe(ItemRegistry.eggsaladItem, new Object[]{"foodBoiledegg", "foodMayo"}));
        this.recipes.add(new ShapelessOreRecipe(ItemRegistry.fruitsaladItem, new Object[]{"listAllfruit", "listAllfruit"}));
        this.recipes.add(new ShapelessOreRecipe(ItemRegistry.springsaladItem, new Object[]{"cropLettuce", Items.field_151172_bF}));
        this.recipes.add(new ShapelessOreRecipe(ItemRegistry.springsaladItem, new Object[]{"cropLettuce", "cropOnion"}));
        this.recipes.add(new ShapelessOreRecipe(ItemRegistry.springsaladItem, new Object[]{"cropLettuce", "cropRadish"}));
        this.recipes.add(new ShapelessOreRecipe(ItemRegistry.springsaladItem, new Object[]{"cropLettuce", "cropCucumber"}));
        this.recipes.add(new ShapelessOreRecipe(ItemRegistry.springsaladItem, new Object[]{"cropLettuce", "cropBellpepper"}));
        this.recipes.add(new ShapelessOreRecipe(ItemRegistry.springsaladItem, new Object[]{"cropLettuce", "cropSpiceleaf"}));
        this.recipes.add(new ShapelessOreRecipe(ItemRegistry.springsaladItem, new Object[]{"cropLettuce", "cropZucchini"}));
        this.recipes.add(new ShapelessOreRecipe(ItemRegistry.springsaladItem, new Object[]{"cropLettuce", "cropAsparagus"}));
        this.recipes.add(new ShapelessOreRecipe(ItemRegistry.springsaladItem, new Object[]{"cropLettuce", "cropBroccoli"}));
        this.recipes.add(new ShapelessOreRecipe(ItemRegistry.springsaladItem, new Object[]{"cropLettuce", "cropPeas"}));
        this.recipes.add(new ShapelessOreRecipe(ItemRegistry.springsaladItem, new Object[]{"cropLettuce", "cropTomato"}));
        this.recipes.add(new ShapelessOreRecipe(ItemRegistry.springsaladItem, new Object[]{"cropLettuce", "cropSunflower"}));
        this.recipes.add(new ShapelessOreRecipe(ItemRegistry.springsaladItem, new Object[]{"cropLettuce", "cropWalnut"}));
        this.recipes.add(new ShapelessOreRecipe(ItemRegistry.springsaladItem, new Object[]{"cropLettuce", "cropCauliflower"}));
        this.recipes.add(new ShapelessOreRecipe(ItemRegistry.springsaladItem, new Object[]{"cropLettuce", "cropRhubarb"}));
        this.recipes.add(new ShapelessOreRecipe(ItemRegistry.porklettucewrapItem, new Object[]{"cropLettuce", "listAllporkcooked"}));
        this.recipes.add(new ShapelessOreRecipe(ItemRegistry.fishlettucewrapItem, new Object[]{"cropLettuce", "listAllfishcooked"}));
        this.recipes.add(new ShapelessOreRecipe(ItemRegistry.bltItem, new Object[]{"cropLettuce", "cropTomato", "listAllporkcooked", "foodToast"}));
        this.recipes.add(new ShapelessOreRecipe(ItemRegistry.nachoesItem, new Object[]{"foodTortilla", "foodCheese"}));
        this.recipes.add(new ShapelessOreRecipe(ItemRegistry.pbandjItem, new Object[]{"foodPeanutbutter", "foodGrapejelly", Items.field_151025_P}));
        this.recipes.add(new ShapelessOreRecipe(ItemRegistry.cucumbersaladItem, new Object[]{"cropCucumber", "foodSpringsalad"}));
        this.recipes.add(new ShapelessOreRecipe(ItemRegistry.vegetarianlettucewrapItem, new Object[]{"cropCucumber", "cropLettuce", "cropTomato"}));
        this.recipes.add(new ShapelessOreRecipe(ItemRegistry.grilledskewersItem, new Object[]{"cropBellpepper", "cropOnion", Items.field_151172_bF, Items.field_151055_y}));
        this.recipes.add(new ShapelessOreRecipe(ItemRegistry.supremepizzaItem, new Object[]{"foodPizza", "cropBellpepper", "cropOnion", "cropSpiceleaf"}));
        this.recipes.add(new ShapelessOreRecipe(ItemRegistry.guacamoleItem, new Object[]{"cropAvocado", "cropChilipepper", "cropTomato", "cropOnion", "cropSpiceleaf"}));
        this.recipes.add(new ShapelessOreRecipe(ItemRegistry.avocadoburritoItem, new Object[]{"cropAvocado", "foodTortilla", "foodCheese", Items.field_151077_bg}));
        this.recipes.add(new ShapelessOreRecipe(ItemRegistry.avocadoburritoItem, new Object[]{"cropAvocado", "foodTortilla", "foodCheese", Items.field_151157_am}));
        this.recipes.add(new ShapelessOreRecipe(ItemRegistry.footlongItem, new Object[]{Items.field_151025_P, "listAllmeatcooked", "cropLettuce", "cropTomato", "foodMayo"}));
        this.recipes.add(new ShapelessOreRecipe(ItemRegistry.mixedsaladItem, new Object[]{"listAllveggie", "listAllveggie", "foodSaladdressing"}));
        this.recipes.add(new ShapelessOreRecipe(ItemRegistry.sushiItem, new Object[]{"listAllfishraw", "cropSeaweed", "cropRice"}));
        this.recipes.add(new ShapelessOreRecipe(ItemRegistry.applejellysandwichItem, new Object[]{"foodPeanutbutter", "foodApplejelly", Items.field_151025_P}));
        this.recipes.add(new ShapelessOreRecipe(ItemRegistry.blackberryjellysandwichItem, new Object[]{"foodPeanutbutter", "foodBlackberryjelly", Items.field_151025_P}));
        this.recipes.add(new ShapelessOreRecipe(ItemRegistry.blueberryjellysandwichItem, new Object[]{"foodPeanutbutter", "foodBlueberryjelly", Items.field_151025_P}));
        this.recipes.add(new ShapelessOreRecipe(ItemRegistry.cherryjellysandwichItem, new Object[]{"foodPeanutbutter", "foodCherryjelly", Items.field_151025_P}));
        this.recipes.add(new ShapelessOreRecipe(ItemRegistry.cranberryjellysandwichItem, new Object[]{"foodPeanutbutter", "foodCranberryjelly", Items.field_151025_P}));
        this.recipes.add(new ShapelessOreRecipe(ItemRegistry.kiwijellysandwichItem, new Object[]{"foodPeanutbutter", "foodKiwijelly", Items.field_151025_P}));
        this.recipes.add(new ShapelessOreRecipe(ItemRegistry.lemonjellysandwichItem, new Object[]{"foodPeanutbutter", "foodLemonjelly", Items.field_151025_P}));
        this.recipes.add(new ShapelessOreRecipe(ItemRegistry.limejellysandwichItem, new Object[]{"foodPeanutbutter", "foodLimejelly", Items.field_151025_P}));
        this.recipes.add(new ShapelessOreRecipe(ItemRegistry.mangojellysandwichItem, new Object[]{"foodPeanutbutter", "foodMangojelly", Items.field_151025_P}));
        this.recipes.add(new ShapelessOreRecipe(ItemRegistry.orangejellysandwichItem, new Object[]{"foodPeanutbutter", "foodOrangejelly", Items.field_151025_P}));
        this.recipes.add(new ShapelessOreRecipe(ItemRegistry.papayajellysandwichItem, new Object[]{"foodPeanutbutter", "foodPapayajelly", Items.field_151025_P}));
        this.recipes.add(new ShapelessOreRecipe(ItemRegistry.peachjellysandwichItem, new Object[]{"foodPeanutbutter", "foodPeachjelly", Items.field_151025_P}));
        this.recipes.add(new ShapelessOreRecipe(ItemRegistry.pomegranatejellysandwichItem, new Object[]{"foodPeanutbutter", "foodPomegranatejelly", Items.field_151025_P}));
        this.recipes.add(new ShapelessOreRecipe(ItemRegistry.raspberryjellysandwichItem, new Object[]{"foodPeanutbutter", "foodRaspberryjelly", Items.field_151025_P}));
        this.recipes.add(new ShapelessOreRecipe(ItemRegistry.starfruitjellysandwichItem, new Object[]{"foodPeanutbutter", "foodStarfruitjelly", Items.field_151025_P}));
        this.recipes.add(new ShapelessOreRecipe(ItemRegistry.strawberryjellysandwichItem, new Object[]{"foodPeanutbutter", "foodStrawberryjelly", Items.field_151025_P}));
        this.recipes.add(new ShapelessOreRecipe(ItemRegistry.watermelonjellysandwichItem, new Object[]{"foodPeanutbutter", "foodWatermelonjelly", Items.field_151025_P}));
        this.recipes.add(new ShapelessOreRecipe(ItemRegistry.ediblerootItem, new Object[]{"cropSpiceleaf"}));
        Collections.sort(this.recipes, new RecipeSorterPamCuttingBoard(this));
    }

    public /* varargs */ ShapedRecipes addRecipe(ItemStack par1ItemStack, Object ... par2ArrayOfObj) {
        String s = "";
        int i = 0;
        int j = 0;
        int k = 0;
        if (par2ArrayOfObj[i] instanceof String[]) {
            String[] astring = (String[])par2ArrayOfObj[i++];
            for (int l = 0; l < astring.length; ++l) {
                String s1 = astring[l];
                ++k;
                j = s1.length();
                s = s + s1;
            }
        } else {
            while (par2ArrayOfObj[i] instanceof String) {
                String s2 = (String)par2ArrayOfObj[i++];
                ++k;
                j = s2.length();
                s = s + s2;
            }
        }
        HashMap<Character, ItemStack> hashmap = new HashMap<Character, ItemStack>();
        while (i < par2ArrayOfObj.length) {
            Character character = (Character)par2ArrayOfObj[i];
            ItemStack itemstack1 = null;
            if (par2ArrayOfObj[i + 1] instanceof Item) {
                itemstack1 = new ItemStack((Item)par2ArrayOfObj[i + 1]);
            } else if (par2ArrayOfObj[i + 1] instanceof Block) {
                itemstack1 = new ItemStack((Block)par2ArrayOfObj[i + 1], 1, 32767);
            } else if (par2ArrayOfObj[i + 1] instanceof ItemStack) {
                itemstack1 = (ItemStack)par2ArrayOfObj[i + 1];
            }
            hashmap.put(character, itemstack1);
            i+=2;
        }
        ItemStack[] aitemstack = new ItemStack[j * k];
        for (int i1 = 0; i1 < j * k; ++i1) {
            char c0 = s.charAt(i1);
            aitemstack[i1] = hashmap.containsKey(Character.valueOf(c0)) ? ((ItemStack)hashmap.get(Character.valueOf(c0))).func_77946_l() : null;
        }
        ShapedRecipes shapedrecipes = new ShapedRecipes(j, k, aitemstack, par1ItemStack);
        this.recipes.add(shapedrecipes);
        return shapedrecipes;
    }

    public /* varargs */ void addShapelessRecipe(ItemStack par1ItemStack, Object ... par2ArrayOfObj) {
        ArrayList<ItemStack> arraylist = new ArrayList<ItemStack>();
        Object[] aobject = par2ArrayOfObj;
        int i = par2ArrayOfObj.length;
        for (int j = 0; j < i; ++j) {
            Object object1 = aobject[j];
            if (object1 instanceof ItemStack) {
                arraylist.add(((ItemStack)object1).func_77946_l());
                continue;
            }
            if (object1 instanceof Item) {
                arraylist.add(new ItemStack((Item)object1));
                continue;
            }
            if (!(object1 instanceof Block)) {
                throw new RuntimeException("Invalid shapeless recipy!");
            }
            arraylist.add(new ItemStack((Block)object1));
        }
        this.recipes.add(new ShapelessRecipes(par1ItemStack, arraylist));
    }

    public ItemStack findMatchingRecipe(InventoryCrafting par1InventoryCrafting, World par2World) {
        int j;
        int i = 0;
        ItemStack itemstack = null;
        ItemStack itemstack1 = null;
        for (j = 0; j < par1InventoryCrafting.func_70302_i_(); ++j) {
            ItemStack itemstack2 = par1InventoryCrafting.func_70301_a(j);
            if (itemstack2 == null) continue;
            if (i == 0) {
                itemstack = itemstack2;
            }
            if (i == 1) {
                itemstack1 = itemstack2;
            }
            ++i;
        }
        if (i == 2 && itemstack.func_77973_b() == itemstack1.func_77973_b() && itemstack.field_77994_a == 1 && itemstack1.field_77994_a == 1 && itemstack.func_77973_b().isRepairable()) {
            Item item = itemstack.func_77973_b();
            int j1 = item.func_77612_l() - itemstack.func_77952_i();
            int k = item.func_77612_l() - itemstack1.func_77952_i();
            int l = j1 + k + item.func_77612_l() * 5 / 100;
            int i1 = item.func_77612_l() - l;
            if (i1 < 0) {
                i1 = 0;
            }
            return new ItemStack(itemstack.func_77973_b(), 1, i1);
        }
        for (j = 0; j < this.recipes.size(); ++j) {
            IRecipe irecipe = (IRecipe)this.recipes.get(j);
            if (!irecipe.func_77569_a(par1InventoryCrafting, par2World)) continue;
            return irecipe.func_77572_b(par1InventoryCrafting);
        }
        return null;
    }

    public List getRecipeList() {
        return this.recipes;
    }
}

