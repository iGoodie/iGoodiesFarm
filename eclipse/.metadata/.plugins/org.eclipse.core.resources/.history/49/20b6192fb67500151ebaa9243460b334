/*
 * Decompiled with CFR 0_102.
 * 
 * Could not load the following classes:
 *  cpw.mods.fml.relauncher.Side
 *  cpw.mods.fml.relauncher.SideOnly
 *  net.minecraft.entity.player.EntityPlayer
 *  net.minecraft.inventory.ISidedInventory
 *  net.minecraft.item.Item
 *  net.minecraft.item.ItemStack
 *  net.minecraft.nbt.NBTBase
 *  net.minecraft.nbt.NBTTagCompound
 *  net.minecraft.nbt.NBTTagList
 *  net.minecraft.network.NetworkManager
 *  net.minecraft.network.Packet
 *  net.minecraft.network.play.server.S35PacketUpdateTileEntity
 *  net.minecraft.tileentity.TileEntity
 *  net.minecraft.world.World
 */
package com.pam.harvestcraft;

import com.pam.harvestcraft.BlockPamPresser;
import com.pam.harvestcraft.PresserRecipes;
import cpw.mods.fml.relauncher.Side;
import cpw.mods.fml.relauncher.SideOnly;
import net.minecraft.entity.player.EntityPlayer;
import net.minecraft.inventory.ISidedInventory;
import net.minecraft.item.Item;
import net.minecraft.item.ItemStack;
import net.minecraft.nbt.NBTBase;
import net.minecraft.nbt.NBTTagCompound;
import net.minecraft.nbt.NBTTagList;
import net.minecraft.network.NetworkManager;
import net.minecraft.network.Packet;
import net.minecraft.network.play.server.S35PacketUpdateTileEntity;
import net.minecraft.tileentity.TileEntity;
import net.minecraft.world.World;

public class TileEntityPamPresser
extends TileEntity
implements ISidedInventory {
    private ItemStack[] combPresserItemStacks = new ItemStack[3];
    public int combPresserBurnTime;
    public int currentCombPresserBurnTime;
    public int combPresserCookTime;
    public int meta = 0;
    private static final int[] slots_top = new int[]{0};
    private static final int[] slots_bottom = new int[]{2, 1};

    public int func_70302_i_() {
        return this.combPresserItemStacks.length;
    }

    public ItemStack func_70301_a(int par1) {
        return this.combPresserItemStacks[par1];
    }

    public ItemStack func_70298_a(int par1, int par2) {
        if (this.combPresserItemStacks[par1] != null) {
            if (this.combPresserItemStacks[par1].field_77994_a <= par2) {
                ItemStack var3 = this.combPresserItemStacks[par1];
                this.combPresserItemStacks[par1] = null;
                return var3;
            }
            ItemStack var3 = this.combPresserItemStacks[par1].func_77979_a(par2);
            if (this.combPresserItemStacks[par1].field_77994_a == 0) {
                this.combPresserItemStacks[par1] = null;
            }
            return var3;
        }
        return null;
    }

    public void func_70299_a(int par1, ItemStack par2ItemStack) {
        this.combPresserItemStacks[par1] = par2ItemStack;
        if (par2ItemStack != null && par2ItemStack.field_77994_a > this.func_70297_j_()) {
            par2ItemStack.field_77994_a = this.func_70297_j_();
        }
    }

    public String getInvName() {
        return "Presser";
    }

    public void func_145839_a(NBTTagCompound par1NBTTagCompound) {
        super.func_145839_a(par1NBTTagCompound);
        NBTTagList var2 = par1NBTTagCompound.func_150295_c("Items", 10);
        this.combPresserItemStacks = new ItemStack[this.func_70302_i_()];
        for (int var3 = 0; var3 < var2.func_74745_c(); ++var3) {
            NBTTagCompound var4 = var2.func_150305_b(var3);
            byte var5 = var4.func_74771_c("Slot");
            if (var5 < 0 || var5 >= this.combPresserItemStacks.length) continue;
            this.combPresserItemStacks[var5] = ItemStack.func_77949_a((NBTTagCompound)var4);
        }
        this.combPresserBurnTime = par1NBTTagCompound.func_74765_d("BurnTime");
        this.combPresserCookTime = par1NBTTagCompound.func_74765_d("CookTime");
        this.currentCombPresserBurnTime = this.getItemBurnTime(this.combPresserItemStacks[1]);
    }

    public void func_145841_b(NBTTagCompound par1NBTTagCompound) {
        super.func_145841_b(par1NBTTagCompound);
        par1NBTTagCompound.func_74777_a("BurnTime", (short)this.combPresserBurnTime);
        par1NBTTagCompound.func_74777_a("CookTime", (short)this.combPresserCookTime);
        NBTTagList var2 = new NBTTagList();
        for (int var3 = 0; var3 < this.combPresserItemStacks.length; ++var3) {
            if (this.combPresserItemStacks[var3] == null) continue;
            NBTTagCompound var4 = new NBTTagCompound();
            var4.func_74774_a("Slot", (byte)var3);
            this.combPresserItemStacks[var3].func_77955_b(var4);
            var2.func_74742_a((NBTBase)var4);
        }
        par1NBTTagCompound.func_74782_a("Items", (NBTBase)var2);
    }

    public int func_70297_j_() {
        return 64;
    }

    @SideOnly(value=Side.CLIENT)
    public int getCookProgressScaled(int par1) {
        return this.combPresserCookTime * par1 / 125;
    }

    public boolean isBurning() {
        return this.combPresserBurnTime > 0;
    }

    public void func_145845_h() {
        boolean var2 = false;
        if (this.combPresserBurnTime > 0) {
            --this.combPresserBurnTime;
        }
        if (!this.field_145850_b.field_72995_K) {
            if (this.combPresserBurnTime == 0 && this.canRun()) {
                this.currentCombPresserBurnTime = this.combPresserBurnTime = this.getItemBurnTime(this.combPresserItemStacks[1]);
            }
            if (this.canRun()) {
                BlockPamPresser.updateBlockState(true, this.field_145850_b, this.field_145851_c, this.field_145848_d, this.field_145849_e);
                ++this.combPresserCookTime;
                if (this.combPresserCookTime == 125) {
                    this.combPresserCookTime = 0;
                    this.pressComb();
                    var2 = true;
                }
            } else {
                BlockPamPresser.updateBlockState(false, this.field_145850_b, this.field_145851_c, this.field_145848_d, this.field_145849_e);
                this.combPresserCookTime = 0;
            }
            if (var2 != this.combPresserBurnTime > 0) {
                var2 = true;
            }
        }
        if (var2) {
            this.func_70296_d();
        }
    }

    public int getDamage(ItemStack par1ItemStack) {
        return par1ItemStack.func_77960_j();
    }

    private boolean canRun() {
        if (this.combPresserItemStacks[0] == null) {
            return false;
        }
        ItemStack itemstack = PresserRecipes.smelting().getSmeltingResult(this.combPresserItemStacks[0]);
        if (itemstack == null) {
            return false;
        }
        if (this.combPresserItemStacks[1] == null) {
            return true;
        }
        if (!this.combPresserItemStacks[1].func_77969_a(itemstack)) {
            return false;
        }
        int result = this.combPresserItemStacks[1].field_77994_a + itemstack.field_77994_a;
        return result <= this.func_70297_j_() && result <= this.combPresserItemStacks[1].func_77976_d();
    }

    public void pressComb() {
        if (this.canRun()) {
            ItemStack itemstack = PresserRecipes.smelting().getSmeltingResult(this.combPresserItemStacks[0]);
            if (this.combPresserItemStacks[1] == null) {
                this.combPresserItemStacks[1] = itemstack.func_77946_l();
            } else if (this.combPresserItemStacks[1].func_77973_b() == itemstack.func_77973_b()) {
                this.combPresserItemStacks[1].field_77994_a+=itemstack.field_77994_a;
            }
            --this.combPresserItemStacks[0].field_77994_a;
            if (this.combPresserItemStacks[0].field_77994_a <= 0) {
                this.combPresserItemStacks[0] = null;
            }
        }
    }

    private int getItemBurnTime(ItemStack par0ItemStack) {
        return 300;
    }

    public boolean func_70300_a(EntityPlayer par1EntityPlayer) {
        return this.field_145850_b.func_147438_o(this.field_145851_c, this.field_145848_d, this.field_145849_e) != this ? false : par1EntityPlayer.func_70092_e((double)this.field_145851_c + 0.5, (double)this.field_145848_d + 0.5, (double)this.field_145849_e + 0.5) <= 64.0;
    }

    public void openChest() {
    }

    public void closeChest() {
    }

    public ItemStack func_70304_b(int var1) {
        return null;
    }

    public boolean isInvNameLocalized() {
        return false;
    }

    public boolean isStackValidForSlot(int i, ItemStack itemstack) {
        return true;
    }

    public boolean func_94041_b(int par1, ItemStack par2ItemStack) {
        return true;
    }

    public int[] func_94128_d(int par1) {
        return par1 == 0 ? slots_bottom : (par1 == 1 ? slots_top : slots_top);
    }

    public boolean func_102007_a(int par1, ItemStack par2ItemStack, int par3) {
        return this.func_94041_b(par1, par2ItemStack);
    }

    public boolean func_102008_b(int par1, ItemStack par2ItemStack, int par3) {
        return true;
    }

    public String func_145825_b() {
        return null;
    }

    public boolean func_145818_k_() {
        return false;
    }

    public void func_70295_k_() {
    }

    public void func_70305_f() {
    }

    public Packet func_145844_m() {
        NBTTagCompound tag = new NBTTagCompound();
        this.func_145841_b(tag);
        return new S35PacketUpdateTileEntity(this.field_145851_c, this.field_145848_d, this.field_145849_e, 1, tag);
    }

    public void onDataPacket(NetworkManager net, S35PacketUpdateTileEntity packet) {
        this.func_145839_a(packet.func_148857_g());
    }
}

