/*
 * Decompiled with CFR 0_102.
 * 
 * Could not load the following classes:
 *  cpw.mods.fml.common.IWorldGenerator
 *  net.minecraft.block.Block
 *  net.minecraft.world.World
 *  net.minecraft.world.WorldProvider
 *  net.minecraft.world.biome.BiomeGenBase
 *  net.minecraft.world.biome.WorldChunkManager
 *  net.minecraft.world.chunk.IChunkProvider
 *  net.minecraftforge.common.BiomeDictionary
 *  net.minecraftforge.common.BiomeDictionary$Type
 */
package com.pam.harvestcraft;

import com.pam.harvestcraft.BlockRegistry;
import com.pam.harvestcraft.WorldGenPamGarden;
import com.pam.harvestcraft.WorldGenPamMushroomGarden;
import cpw.mods.fml.common.IWorldGenerator;
import java.util.Random;
import net.minecraft.block.Block;
import net.minecraft.world.World;
import net.minecraft.world.WorldProvider;
import net.minecraft.world.biome.BiomeGenBase;
import net.minecraft.world.biome.WorldChunkManager;
import net.minecraft.world.chunk.IChunkProvider;
import net.minecraftforge.common.BiomeDictionary;

public class PamGardenGenerator
implements IWorldGenerator {
    public void generate(Random random, int chunkX, int chunkZ, World world, IChunkProvider chunkGenerator, IChunkProvider chunkProvider) {
        switch (world.field_73011_w.field_76574_g) {
            case 0: {
                this.generateSurface(world, random, chunkX * 16, chunkZ * 16);
            }
            case 6: {
                if (BlockRegistry.enableAroma1997sdimensionalworldgardenGen) {
                    this.generateSurface(world, random, chunkX * 16, chunkZ * 16);
                }
            }
            case 7: {
                if (!BlockRegistry.enabletwilightforestgardenGen) break;
                this.generateSurface(world, random, chunkX * 16, chunkZ * 16);
            }
        }
    }

    public void generateSurface(World world, Random rand, int chunkX, int chunkZ) {
        int randPosX;
        int flowerType;
        int i;
        int randPosY;
        int randPosZ;
        BiomeGenBase biome = world.func_72959_q().func_76935_a(chunkX, chunkZ);
        if (BiomeDictionary.isBiomeOfType((BiomeGenBase)biome, (BiomeDictionary.Type)BiomeDictionary.Type.DEAD)) {
            return;
        }
        if (BlockRegistry.enableberrygardenGeneration && (BiomeDictionary.isBiomeOfType((BiomeGenBase)biome, (BiomeDictionary.Type)BiomeDictionary.Type.FOREST) || BiomeDictionary.isBiomeOfType((BiomeGenBase)biome, (BiomeDictionary.Type)BiomeDictionary.Type.HILLS) || BiomeDictionary.isBiomeOfType((BiomeGenBase)biome, (BiomeDictionary.Type)BiomeDictionary.Type.COLD) || BiomeDictionary.isBiomeOfType((BiomeGenBase)biome, (BiomeDictionary.Type)BiomeDictionary.Type.WET))) {
            for (i = 0; i < BlockRegistry.gardenRarity; ++i) {
                flowerType = rand.nextInt(1);
                randPosX = chunkX + rand.nextInt(16) + 8;
                randPosY = rand.nextInt(128);
                randPosZ = chunkZ + rand.nextInt(16) + 8;
                new WorldGenPamGarden(BlockRegistry.pamberryGarden, flowerType).func_76484_a(world, rand, randPosX, randPosY, randPosZ);
            }
        }
        if (BlockRegistry.enabledesertgardenGeneration && BiomeDictionary.isBiomeOfType((BiomeGenBase)biome, (BiomeDictionary.Type)BiomeDictionary.Type.SANDY)) {
            for (i = 0; i < BlockRegistry.gardenRarity; ++i) {
                flowerType = rand.nextInt(1);
                randPosX = chunkX + rand.nextInt(16) + 8;
                randPosY = rand.nextInt(128);
                randPosZ = chunkZ + rand.nextInt(16) + 8;
                new WorldGenPamGarden(BlockRegistry.pamdesertGarden, flowerType).func_76484_a(world, rand, randPosX, randPosY, randPosZ);
            }
        }
        if (BlockRegistry.enablegrassgardenGeneration && BiomeDictionary.isBiomeOfType((BiomeGenBase)biome, (BiomeDictionary.Type)BiomeDictionary.Type.PLAINS) && !BiomeDictionary.isBiomeOfType((BiomeGenBase)biome, (BiomeDictionary.Type)BiomeDictionary.Type.COLD)) {
            for (i = 0; i < BlockRegistry.gardenRarity; ++i) {
                flowerType = rand.nextInt(1);
                randPosX = chunkX + rand.nextInt(16) + 8;
                randPosY = rand.nextInt(128);
                randPosZ = chunkZ + rand.nextInt(16) + 8;
                new WorldGenPamGarden(BlockRegistry.pamgrassGarden, flowerType).func_76484_a(world, rand, randPosX, randPosY, randPosZ);
            }
        }
        if (BlockRegistry.enablegourdgardenGeneration && (BiomeDictionary.isBiomeOfType((BiomeGenBase)biome, (BiomeDictionary.Type)BiomeDictionary.Type.PLAINS) || BiomeDictionary.isBiomeOfType((BiomeGenBase)biome, (BiomeDictionary.Type)BiomeDictionary.Type.FOREST))) {
            for (i = 0; i < BlockRegistry.gardenRarity; ++i) {
                flowerType = rand.nextInt(1);
                randPosX = chunkX + rand.nextInt(16) + 8;
                randPosY = rand.nextInt(128);
                randPosZ = chunkZ + rand.nextInt(16) + 8;
                new WorldGenPamGarden(BlockRegistry.pamgourdGarden, flowerType).func_76484_a(world, rand, randPosX, randPosY, randPosZ);
            }
        }
        if (BlockRegistry.enablegroundgardenGeneration && (BiomeDictionary.isBiomeOfType((BiomeGenBase)biome, (BiomeDictionary.Type)BiomeDictionary.Type.MOUNTAIN) || BiomeDictionary.isBiomeOfType((BiomeGenBase)biome, (BiomeDictionary.Type)BiomeDictionary.Type.HILLS) || BiomeDictionary.isBiomeOfType((BiomeGenBase)biome, (BiomeDictionary.Type)BiomeDictionary.Type.MESA) || BiomeDictionary.isBiomeOfType((BiomeGenBase)biome, (BiomeDictionary.Type)BiomeDictionary.Type.SAVANNA))) {
            for (i = 0; i < BlockRegistry.gardenRarity; ++i) {
                flowerType = rand.nextInt(1);
                randPosX = chunkX + rand.nextInt(16) + 8;
                randPosY = rand.nextInt(128);
                randPosZ = chunkZ + rand.nextInt(16) + 8;
                new WorldGenPamGarden(BlockRegistry.pamgroundGarden, flowerType).func_76484_a(world, rand, randPosX, randPosY, randPosZ);
            }
        }
        if (BlockRegistry.enableherbgardenGeneration && (BiomeDictionary.isBiomeOfType((BiomeGenBase)biome, (BiomeDictionary.Type)BiomeDictionary.Type.FOREST) && !BiomeDictionary.isBiomeOfType((BiomeGenBase)biome, (BiomeDictionary.Type)BiomeDictionary.Type.COLD) || BiomeDictionary.isBiomeOfType((BiomeGenBase)biome, (BiomeDictionary.Type)BiomeDictionary.Type.WET))) {
            for (i = 0; i < BlockRegistry.gardenRarity; ++i) {
                flowerType = rand.nextInt(1);
                randPosX = chunkX + rand.nextInt(16) + 8;
                randPosY = rand.nextInt(128);
                randPosZ = chunkZ + rand.nextInt(16) + 8;
                new WorldGenPamGarden(BlockRegistry.pamherbGarden, flowerType).func_76484_a(world, rand, randPosX, randPosY, randPosZ);
            }
        }
        if (BlockRegistry.enableleafygardenGeneration && (BiomeDictionary.isBiomeOfType((BiomeGenBase)biome, (BiomeDictionary.Type)BiomeDictionary.Type.FOREST) && !BiomeDictionary.isBiomeOfType((BiomeGenBase)biome, (BiomeDictionary.Type)BiomeDictionary.Type.COLD) || BiomeDictionary.isBiomeOfType((BiomeGenBase)biome, (BiomeDictionary.Type)BiomeDictionary.Type.WET))) {
            for (i = 0; i < BlockRegistry.gardenRarity; ++i) {
                flowerType = rand.nextInt(1);
                randPosX = chunkX + rand.nextInt(16) + 8;
                randPosY = rand.nextInt(128);
                randPosZ = chunkZ + rand.nextInt(16) + 8;
                new WorldGenPamGarden(BlockRegistry.pamleafyGarden, flowerType).func_76484_a(world, rand, randPosX, randPosY, randPosZ);
            }
        }
        if (BlockRegistry.enablemushroomgardenGeneration && (BiomeDictionary.isBiomeOfType((BiomeGenBase)biome, (BiomeDictionary.Type)BiomeDictionary.Type.FOREST) && !BiomeDictionary.isBiomeOfType((BiomeGenBase)biome, (BiomeDictionary.Type)BiomeDictionary.Type.COLD) && !BiomeDictionary.isBiomeOfType((BiomeGenBase)biome, (BiomeDictionary.Type)BiomeDictionary.Type.MOUNTAIN) || BiomeDictionary.isBiomeOfType((BiomeGenBase)biome, (BiomeDictionary.Type)BiomeDictionary.Type.WET))) {
            for (i = 0; i < BlockRegistry.gardenRarity; ++i) {
                flowerType = rand.nextInt(1);
                randPosX = chunkX + rand.nextInt(16) + 8;
                randPosY = rand.nextInt(128);
                randPosZ = chunkZ + rand.nextInt(16) + 8;
                new WorldGenPamMushroomGarden(BlockRegistry.pammushroomGarden, flowerType).func_76484_a(world, rand, randPosX, randPosY, randPosZ);
            }
        }
        if (BlockRegistry.enablestalkgardenGeneration && (BiomeDictionary.isBiomeOfType((BiomeGenBase)biome, (BiomeDictionary.Type)BiomeDictionary.Type.PLAINS) && !BiomeDictionary.isBiomeOfType((BiomeGenBase)biome, (BiomeDictionary.Type)BiomeDictionary.Type.COLD) || BiomeDictionary.isBiomeOfType((BiomeGenBase)biome, (BiomeDictionary.Type)BiomeDictionary.Type.FOREST) && !BiomeDictionary.isBiomeOfType((BiomeGenBase)biome, (BiomeDictionary.Type)BiomeDictionary.Type.COLD) || BiomeDictionary.isBiomeOfType((BiomeGenBase)biome, (BiomeDictionary.Type)BiomeDictionary.Type.WET))) {
            for (i = 0; i < BlockRegistry.gardenRarity; ++i) {
                flowerType = rand.nextInt(1);
                randPosX = chunkX + rand.nextInt(16) + 8;
                randPosY = rand.nextInt(128);
                randPosZ = chunkZ + rand.nextInt(16) + 8;
                new WorldGenPamGarden(BlockRegistry.pamstalkGarden, flowerType).func_76484_a(world, rand, randPosX, randPosY, randPosZ);
            }
        }
        if (BlockRegistry.enabletextilegardenGeneration && (BiomeDictionary.isBiomeOfType((BiomeGenBase)biome, (BiomeDictionary.Type)BiomeDictionary.Type.COLD) || BiomeDictionary.isBiomeOfType((BiomeGenBase)biome, (BiomeDictionary.Type)BiomeDictionary.Type.HILLS) || BiomeDictionary.isBiomeOfType((BiomeGenBase)biome, (BiomeDictionary.Type)BiomeDictionary.Type.WET))) {
            for (i = 0; i < BlockRegistry.gardenRarity; ++i) {
                flowerType = rand.nextInt(1);
                randPosX = chunkX + rand.nextInt(16) + 8;
                randPosY = rand.nextInt(128);
                randPosZ = chunkZ + rand.nextInt(16) + 8;
                new WorldGenPamGarden(BlockRegistry.pamtextileGarden, flowerType).func_76484_a(world, rand, randPosX, randPosY, randPosZ);
            }
        }
        if (BlockRegistry.enabletropicalgardenGeneration && (BiomeDictionary.isBiomeOfType((BiomeGenBase)biome, (BiomeDictionary.Type)BiomeDictionary.Type.WET) || BiomeDictionary.isBiomeOfType((BiomeGenBase)biome, (BiomeDictionary.Type)BiomeDictionary.Type.HOT))) {
            for (i = 0; i < BlockRegistry.gardenRarity; ++i) {
                flowerType = rand.nextInt(1);
                randPosX = chunkX + rand.nextInt(16) + 8;
                randPosY = rand.nextInt(128);
                randPosZ = chunkZ + rand.nextInt(16) + 8;
                new WorldGenPamGarden(BlockRegistry.pamtropicalGarden, flowerType).func_76484_a(world, rand, randPosX, randPosY, randPosZ);
            }
        }
        if (BlockRegistry.enablewatergardenGeneration && (BiomeDictionary.isBiomeOfType((BiomeGenBase)biome, (BiomeDictionary.Type)BiomeDictionary.Type.OCEAN) && !BiomeDictionary.isBiomeOfType((BiomeGenBase)biome, (BiomeDictionary.Type)BiomeDictionary.Type.COLD) || BiomeDictionary.isBiomeOfType((BiomeGenBase)biome, (BiomeDictionary.Type)BiomeDictionary.Type.RIVER) && !BiomeDictionary.isBiomeOfType((BiomeGenBase)biome, (BiomeDictionary.Type)BiomeDictionary.Type.COLD))) {
            for (i = 0; i < BlockRegistry.gardenRarity; ++i) {
                flowerType = rand.nextInt(1);
                randPosX = chunkX + rand.nextInt(16) + 8;
                randPosY = rand.nextInt(128);
                randPosZ = chunkZ + rand.nextInt(16) + 8;
                new WorldGenPamGarden(BlockRegistry.pamwaterGarden, flowerType).func_76484_a(world, rand, randPosX, randPosY, randPosZ);
            }
        }
    }
}

