package igoodie.igoodiesfarm.items;

import java.util.List;

import cpw.mods.fml.relauncher.Side;
import cpw.mods.fml.relauncher.SideOnly;
import igoodie.igoodiesfarm.tabs.GoodiesFarmTab;
import net.minecraft.entity.player.EntityPlayer;
import net.minecraft.item.EnumAction;
import net.minecraft.item.Item;
import net.minecraft.item.ItemFood;
import net.minecraft.item.ItemStack;
import net.minecraft.potion.PotionEffect;
import net.minecraft.world.World;

public class ItemBlackberry extends Item
{
    public final int itemUseDuration = 8;
    private final int healAmount = 1;
    private final float saturationModifier = 0.1f;
    private final boolean isWolfsFavoriteMeat = false;
    private boolean alwaysEdible = true;
    private int potionId;
    private int potionDuration;
    private int potionAmplifier;
    private float potionEffectProbability;
    
	public ItemBlackberry() 
	{
		super();
		this.setCreativeTab(GoodiesFarmTab.tabInstance);
		this.setUnlocalizedName("itemBlackberry");
		this.setTextureName("itemBlackberry");
		this.setMaxStackSize(64);
	}
	
	/*public ItemStack onEaten(ItemStack stack, World world, EntityPlayer player)
	{
        super.onEaten(stack, world, player);
        return stack;
    }*/
	
	public ItemStack onEaten(ItemStack stack, World world, EntityPlayer player)
    {
        --stack.stackSize;
        player.getFoodStats().addStats(healAmount, saturationModifier);//func_151686_a(this, stack);
        world.playSoundAtEntity(player, "random.burp", 0.5F, world.rand.nextFloat() * 0.1F + 0.9F);
        this.onFoodEaten(stack, world, player);
        return stack;
    }
	
	protected void onFoodEaten(ItemStack stack, World world, EntityPlayer player)
    {
        /*if (!world.isRemote && this.potionId > 0 && world.rand.nextFloat() < this.potionEffectProbability)
        {
            player.addPotionEffect(new PotionEffect(this.potionId, this.potionDuration * 20, this.potionAmplifier));
        }*/
    }
	
    public int getMaxItemUseDuration(ItemStack p_77626_1_)
    {
        return this.itemUseDuration;
    }

    public EnumAction getItemUseAction(ItemStack p_77661_1_)
    {
        return EnumAction.eat;
    }

    public ItemStack onItemRightClick(ItemStack p_77659_1_, World p_77659_2_, EntityPlayer p_77659_3_)
    {
        if (p_77659_3_.canEat(this.alwaysEdible))
        {
            p_77659_3_.setItemInUse(p_77659_1_, this.getMaxItemUseDuration(p_77659_1_));
        }

        return p_77659_1_;
    }

    public int func_150905_g(ItemStack p_150905_1_)
    {
        return this.healAmount;
    }

    public float func_150906_h(ItemStack p_150906_1_)
    {
        return this.saturationModifier;
    }

    public boolean isWolfsFavoriteMeat()
    {
        return this.isWolfsFavoriteMeat;
    }
    
    @SideOnly(Side.CLIENT)
    public void addInformation(ItemStack p_77624_1_, EntityPlayer p_77624_2_, List p_77624_3_, boolean p_77624_4_) 
    {
    	
    }
}
