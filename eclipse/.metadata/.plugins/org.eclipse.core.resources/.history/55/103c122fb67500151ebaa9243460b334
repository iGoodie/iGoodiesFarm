/*
 * Decompiled with CFR 0_102.
 * 
 * Could not load the following classes:
 *  net.minecraft.block.Block
 *  net.minecraft.init.Blocks
 *  net.minecraft.init.Items
 *  net.minecraft.inventory.InventoryCrafting
 *  net.minecraft.item.Item
 *  net.minecraft.item.ItemStack
 *  net.minecraft.item.crafting.IRecipe
 *  net.minecraft.item.crafting.ShapedRecipes
 *  net.minecraft.item.crafting.ShapelessRecipes
 *  net.minecraft.world.World
 *  net.minecraftforge.oredict.ShapelessOreRecipe
 */
package com.pam.harvestcraft;

import com.pam.harvestcraft.ItemRegistry;
import com.pam.harvestcraft.RecipeSorterPamPot;
import java.util.ArrayList;
import java.util.Collections;
import java.util.HashMap;
import java.util.List;
import net.minecraft.block.Block;
import net.minecraft.init.Blocks;
import net.minecraft.init.Items;
import net.minecraft.inventory.InventoryCrafting;
import net.minecraft.item.Item;
import net.minecraft.item.ItemStack;
import net.minecraft.item.crafting.IRecipe;
import net.minecraft.item.crafting.ShapedRecipes;
import net.minecraft.item.crafting.ShapelessRecipes;
import net.minecraft.world.World;
import net.minecraftforge.oredict.ShapelessOreRecipe;

public class CraftingManagerPamPot {
    private static final CraftingManagerPamPot instance = new CraftingManagerPamPot();
    private List recipes = new ArrayList();

    public static final CraftingManagerPamPot getInstance() {
        return instance;
    }

    private CraftingManagerPamPot() {
        if (ItemRegistry.enablesaltfromwaterbucketrecipe) {
            this.recipes.add(new ShapelessOreRecipe(ItemRegistry.saltItem, new Object[]{"listAllwater"}));
        }
        this.recipes.add(new ShapelessOreRecipe(Items.field_151102_aT, new Object[]{"foodHoneydrop"}));
        this.recipes.add(new ShapelessOreRecipe(Items.field_151102_aT, new Object[]{"dropHoney"}));
        this.recipes.add(new ShapelessOreRecipe(ItemRegistry.waxItem, new Object[]{ItemRegistry.candleberryItem, ItemRegistry.candleberryItem, ItemRegistry.candleberryItem, ItemRegistry.candleberryItem}));
        this.recipes.add(new ShapelessOreRecipe(ItemRegistry.cheeseItem, new Object[]{"listAllmilk", "foodSalt"}));
        this.recipes.add(new ShapelessOreRecipe(ItemRegistry.icecreamItem, new Object[]{"listAllmilk", "foodSalt", Items.field_151126_ay}));
        this.recipes.add(new ShapelessOreRecipe(ItemRegistry.applesauceItem, new Object[]{Items.field_151034_e}));
        this.recipes.add(new ShapelessOreRecipe(ItemRegistry.pumpkinsoupItem, new Object[]{Blocks.field_150423_aK, "listAllReplaceheavycream", "foodStock"}));
        this.recipes.add(new ShapelessOreRecipe(ItemRegistry.carrotsoupItem, new Object[]{Items.field_151172_bF, "listAllReplaceheavycream", "foodStock"}));
        this.recipes.add(new ShapelessOreRecipe(ItemRegistry.potatosoupItem, new Object[]{Items.field_151174_bG, "foodSalt", "foodStock"}));
        this.recipes.add(new ShapelessOreRecipe(ItemRegistry.chickennoodlesoupItem, new Object[]{"listAllchickenraw", Items.field_151172_bF, "foodPasta", "foodStock"}));
        this.recipes.add(new ShapelessOreRecipe(ItemRegistry.hotdogItem, new Object[]{"listAllporkraw", Items.field_151025_P}));
        this.recipes.add(new ShapelessOreRecipe(ItemRegistry.potroastItem, new Object[]{"listAllbeefraw", Items.field_151174_bG, Items.field_151172_bF, "foodStock"}));
        this.recipes.add(new ShapelessOreRecipe(ItemRegistry.boiledeggItem, new Object[]{"listAllegg"}));
        this.recipes.add(new ShapelessOreRecipe(ItemRegistry.spidereyesoupItem, new Object[]{Items.field_151070_bp, "foodStock"}));
        this.recipes.add(new ShapelessOreRecipe(ItemRegistry.vegetablesoupItem, new Object[]{Items.field_151174_bG, Items.field_151172_bF, "listAllmushroom", "foodStock"}));
        this.recipes.add(new ShapelessOreRecipe(ItemRegistry.vegetablesoupItem, new Object[]{Items.field_151174_bG, Items.field_151172_bF, "listAllmushroom", "foodStock"}));
        this.recipes.add(new ShapelessOreRecipe(ItemRegistry.vegetablesoupItem, new Object[]{Items.field_151174_bG, Items.field_151172_bF, "listAllmushroom", "foodStock"}));
        this.recipes.add(new ShapelessOreRecipe(new ItemStack(ItemRegistry.stockItem, 3, 0), new Object[]{Items.field_151103_aS}));
        this.recipes.add(new ShapelessOreRecipe(new ItemStack(ItemRegistry.stockItem, 3, 0), new Object[]{"listAllmeatraw"}));
        this.recipes.add(new ShapelessOreRecipe(new ItemStack(ItemRegistry.stockItem, 3, 0), new Object[]{"listAllveggie"}));
        this.recipes.add(new ShapelessOreRecipe(ItemRegistry.tomatosoupItem, new Object[]{"cropTomato", "foodStock"}));
        this.recipes.add(new ShapelessOreRecipe(ItemRegistry.onionsoupItem, new Object[]{"cropOnion", "foodStock", "foodGrilledcheese"}));
        this.recipes.add(new ShapelessOreRecipe(ItemRegistry.vinegarItem, new Object[]{"foodGrapejuice"}));
        this.recipes.add(new ShapelessOreRecipe(ItemRegistry.picklesItem, new Object[]{"cropCucumber", "foodSalt", "foodVinegar"}));
        this.recipes.add(new ShapelessOreRecipe(ItemRegistry.cucumbersoupItem, new Object[]{"cropCucumber", "foodStock", "listAllReplaceheavycream"}));
        this.recipes.add(new ShapelessOreRecipe(ItemRegistry.marinatedcucumbersItem, new Object[]{"cropCucumber", "cropOnion", Items.field_151102_aT, "foodVinegar"}));
        this.recipes.add(new ShapelessOreRecipe(ItemRegistry.ricesoupItem, new Object[]{"cropRice", "foodStock"}));
        this.recipes.add(new ShapelessOreRecipe(ItemRegistry.bakedbeansItem, new Object[]{"cropBean", "listAllporkcooked", Items.field_151102_aT}));
        this.recipes.add(new ShapelessOreRecipe(ItemRegistry.beansandriceItem, new Object[]{"cropBean", "cropRice", "cropOnion", "listAllporkcooked"}));
        this.recipes.add(new ShapelessOreRecipe(ItemRegistry.beansandriceItem, new Object[]{"cropBean", "cropRice", "cropBellpepper", "listAllporkcooked"}));
        this.recipes.add(new ShapelessOreRecipe(ItemRegistry.beansandriceItem, new Object[]{"cropBean", "cropRice", "cropChilipepper", "listAllporkcooked"}));
        this.recipes.add(new ShapelessOreRecipe(ItemRegistry.chiliItem, new Object[]{"cropBean", "cropOnion", "listAllbeefcooked"}));
        this.recipes.add(new ShapelessOreRecipe(ItemRegistry.chiliItem, new Object[]{"cropBean", "cropBellpepper", "listAllbeefcooked"}));
        this.recipes.add(new ShapelessOreRecipe(ItemRegistry.chiliItem, new Object[]{"cropBean", "cropChilipepper", "listAllbeefcooked"}));
        this.recipes.add(new ShapelessOreRecipe(ItemRegistry.pickledbeetsItem, new Object[]{"cropBeet", "foodVinegar", "foodSalt"}));
        this.recipes.add(new ShapelessOreRecipe(ItemRegistry.beetsoupItem, new Object[]{"cropBeet", "cropOnion", "foodBlackpepper", "listAllmilk"}));
        this.recipes.add(new ShapelessOreRecipe(ItemRegistry.broccolimacItem, new Object[]{"cropBroccoli", "foodPasta", "foodCheese"}));
        this.recipes.add(new ShapelessOreRecipe(ItemRegistry.creamedbroccolisoupItem, new Object[]{"cropBroccoli", Items.field_151172_bF, "foodFlour", "foodBlackpepper", "foodStock"}));
        this.recipes.add(new ShapelessOreRecipe(ItemRegistry.steamedpeasItem, new Object[]{"cropPeas", "listAllwater", "foodSalt"}));
        this.recipes.add(new ShapelessOreRecipe(ItemRegistry.splitpeasoupItem, new Object[]{"cropPeas", "listAllporkcooked", "foodBlackpepper", "foodStock"}));
        this.recipes.add(new ShapelessOreRecipe(ItemRegistry.turnipsoupItem, new Object[]{"cropTurnip", Blocks.field_150423_aK, "foodButter", "foodStock"}));
        this.recipes.add(new ShapelessOreRecipe(ItemRegistry.celerysoupItem, new Object[]{"cropCelery", "cropOnion", Items.field_151172_bF, "foodStock"}));
        this.recipes.add(new ShapelessOreRecipe(ItemRegistry.asparagussoupItem, new Object[]{"cropAsparagus", "cropOnion", "foodButter", "foodStock"}));
        this.recipes.add(new ShapelessOreRecipe(ItemRegistry.creamofavocadosoupItem, new Object[]{"cropAvocado", "listAllReplaceheavycream", "cropLime", "cropSpiceleaf", "foodStock"}));
        this.recipes.add(new ShapelessOreRecipe(ItemRegistry.chickencurryItem, new Object[]{"cropCoconut", "foodPlainyogurt", "listAllchickenraw", "cropSpiceleaf", "cropChilipepper", "cropRice", "foodGroundcinnamon", "cropGarlic"}));
        this.recipes.add(new ShapelessOreRecipe(ItemRegistry.marshmellowsItem, new Object[]{Items.field_151102_aT, "listAllwater", "listAllegg"}));
        this.recipes.add(new ShapelessOreRecipe(ItemRegistry.donutItem, new Object[]{"foodDough", "foodOliveoil"}));
        this.recipes.add(new ShapelessOreRecipe(ItemRegistry.cactussoupItem, new Object[]{Blocks.field_150434_aF, "foodStock"}));
        this.recipes.add(new ShapelessOreRecipe(ItemRegistry.seedsoupItem, new Object[]{"listAllseed", "foodStock"}));
        this.recipes.add(new ShapelessOreRecipe(ItemRegistry.friedchickenItem, new Object[]{"listAllchickenraw", "foodFlour", "cropSpiceleaf", "foodBlackpepper", "foodOliveoil"}));
        this.recipes.add(new ShapelessOreRecipe(ItemRegistry.meatystewItem, new Object[]{"listAllmeatraw", "foodFlour", "foodStock"}));
        this.recipes.add(new ShapelessOreRecipe(ItemRegistry.gardensoupItem, new Object[]{"foodStock", "listAllveggie", "listAllveggie"}));
        this.recipes.add(new ShapelessOreRecipe(ItemRegistry.cherrysodaItem, new Object[]{"foodBubblywater", Items.field_151102_aT, "foodCherryjuice"}));
        this.recipes.add(new ShapelessOreRecipe(ItemRegistry.colasodaItem, new Object[]{"foodBubblywater", Items.field_151102_aT, "cropSpiceleaf"}));
        this.recipes.add(new ShapelessOreRecipe(ItemRegistry.gingersodaItem, new Object[]{"foodBubblywater", Items.field_151102_aT, "cropGinger"}));
        this.recipes.add(new ShapelessOreRecipe(ItemRegistry.grapesodaItem, new Object[]{"foodBubblywater", Items.field_151102_aT, "foodGrapejuice"}));
        this.recipes.add(new ShapelessOreRecipe(ItemRegistry.lemonlimesodaItem, new Object[]{"foodBubblywater", Items.field_151102_aT, "cropLemon", "foodLimejuice"}));
        this.recipes.add(new ShapelessOreRecipe(ItemRegistry.orangesodaItem, new Object[]{"foodBubblywater", Items.field_151102_aT, "foodOrangejuice"}));
        this.recipes.add(new ShapelessOreRecipe(ItemRegistry.rootbeersodaItem, new Object[]{"foodBubblywater", Items.field_151102_aT, "cropEdibleroot"}));
        this.recipes.add(new ShapelessOreRecipe(ItemRegistry.strawberrysodaItem, new Object[]{"foodBubblywater", Items.field_151102_aT, "foodStrawberryjuice"}));
        this.recipes.add(new ShapelessOreRecipe(ItemRegistry.oldworldveggiesoupItem, new Object[]{"foodStock", "cropOnion", "cropPeas", "cropBarley"}));
        this.recipes.add(new ShapelessOreRecipe(ItemRegistry.lambbarleysoupItem, new Object[]{"foodStock", "listAllmuttonraw", "cropOnion", Items.field_151172_bF, "cropBarley"}));
        this.recipes.add(new ShapelessOreRecipe(ItemRegistry.leekbaconsoupItem, new Object[]{"cropLeek", "listAllporkcooked", Items.field_151174_bG, "listAllReplaceheavycream"}));
        Collections.sort(this.recipes, new RecipeSorterPamPot(this));
    }

    public /* varargs */ ShapedRecipes addRecipe(ItemStack par1ItemStack, Object ... par2ArrayOfObj) {
        String s = "";
        int i = 0;
        int j = 0;
        int k = 0;
        if (par2ArrayOfObj[i] instanceof String[]) {
            String[] astring = (String[])par2ArrayOfObj[i++];
            for (int l = 0; l < astring.length; ++l) {
                String s1 = astring[l];
                ++k;
                j = s1.length();
                s = s + s1;
            }
        } else {
            while (par2ArrayOfObj[i] instanceof String) {
                String s2 = (String)par2ArrayOfObj[i++];
                ++k;
                j = s2.length();
                s = s + s2;
            }
        }
        HashMap<Character, ItemStack> hashmap = new HashMap<Character, ItemStack>();
        while (i < par2ArrayOfObj.length) {
            Character character = (Character)par2ArrayOfObj[i];
            ItemStack itemstack1 = null;
            if (par2ArrayOfObj[i + 1] instanceof Item) {
                itemstack1 = new ItemStack((Item)par2ArrayOfObj[i + 1]);
            } else if (par2ArrayOfObj[i + 1] instanceof Block) {
                itemstack1 = new ItemStack((Block)par2ArrayOfObj[i + 1], 1, 32767);
            } else if (par2ArrayOfObj[i + 1] instanceof ItemStack) {
                itemstack1 = (ItemStack)par2ArrayOfObj[i + 1];
            }
            hashmap.put(character, itemstack1);
            i+=2;
        }
        ItemStack[] aitemstack = new ItemStack[j * k];
        for (int i1 = 0; i1 < j * k; ++i1) {
            char c0 = s.charAt(i1);
            aitemstack[i1] = hashmap.containsKey(Character.valueOf(c0)) ? ((ItemStack)hashmap.get(Character.valueOf(c0))).func_77946_l() : null;
        }
        ShapedRecipes shapedrecipes = new ShapedRecipes(j, k, aitemstack, par1ItemStack);
        this.recipes.add(shapedrecipes);
        return shapedrecipes;
    }

    public /* varargs */ void addShapelessRecipe(ItemStack par1ItemStack, Object ... par2ArrayOfObj) {
        ArrayList<ItemStack> arraylist = new ArrayList<ItemStack>();
        Object[] aobject = par2ArrayOfObj;
        int i = par2ArrayOfObj.length;
        for (int j = 0; j < i; ++j) {
            Object object1 = aobject[j];
            if (object1 instanceof ItemStack) {
                arraylist.add(((ItemStack)object1).func_77946_l());
                continue;
            }
            if (object1 instanceof Item) {
                arraylist.add(new ItemStack((Item)object1));
                continue;
            }
            if (!(object1 instanceof Block)) {
                throw new RuntimeException("Invalid shapeless recipy!");
            }
            arraylist.add(new ItemStack((Block)object1));
        }
        this.recipes.add(new ShapelessRecipes(par1ItemStack, arraylist));
    }

    public ItemStack findMatchingRecipe(InventoryCrafting par1InventoryCrafting, World par2World) {
        int j;
        int i = 0;
        ItemStack itemstack = null;
        ItemStack itemstack1 = null;
        for (j = 0; j < par1InventoryCrafting.func_70302_i_(); ++j) {
            ItemStack itemstack2 = par1InventoryCrafting.func_70301_a(j);
            if (itemstack2 == null) continue;
            if (i == 0) {
                itemstack = itemstack2;
            }
            if (i == 1) {
                itemstack1 = itemstack2;
            }
            ++i;
        }
        if (i == 2 && itemstack.func_77973_b() == itemstack1.func_77973_b() && itemstack.field_77994_a == 1 && itemstack1.field_77994_a == 1 && itemstack.func_77973_b().isRepairable()) {
            Item item = itemstack.func_77973_b();
            int j1 = item.func_77612_l() - itemstack.func_77952_i();
            int k = item.func_77612_l() - itemstack1.func_77952_i();
            int l = j1 + k + item.func_77612_l() * 5 / 100;
            int i1 = item.func_77612_l() - l;
            if (i1 < 0) {
                i1 = 0;
            }
            return new ItemStack(itemstack.func_77973_b(), 1, i1);
        }
        for (j = 0; j < this.recipes.size(); ++j) {
            IRecipe irecipe = (IRecipe)this.recipes.get(j);
            if (!irecipe.func_77569_a(par1InventoryCrafting, par2World)) continue;
            return irecipe.func_77572_b(par1InventoryCrafting);
        }
        return null;
    }

    public List getRecipeList() {
        return this.recipes;
    }
}

